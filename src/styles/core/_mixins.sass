@mixin svg-icon($width, $height, $icon) 
  display: inline-block !important
  width: $width + px !important
  height: $height + px !important
  max-width: $width + px !important
  min-width: $width + px !important
  max-height: $height + px !important
  min-height: $height + px !important
  overflow: hidden !important
  background-image: url('./assets/' + $icon + '.svg') !important
  background-size: $width + px $height + px !important

@mixin icon-size($width, $height) 
  display: inline-block !important
  width: $width + px !important
  height: $height + px !important
  max-width: $width + px !important
  min-width: $width + px !important
  max-height: $height + px !important
  min-height: $height + px !important
  overflow: hidden !important


@mixin animation($name, $duration, $delay, $count, $timing, $mode) 
  animation-name: $name 
  animation-duration: $duration 
  animation-timing-function: $timing 
  animation-fill-mode: forwards 
  animation-delay: $delay 
  animation-iteration-count: $count 
  animation-direction: $mode 


@mixin clearfix() 
  &::after 
    display: block;
    content: "";
    clear: both;


@mixin gradient($color)
  background: $color
  background: -moz-linear-gradient(left, darken($color, 20%) 0%, $color 100%)
  background: -webkit-linear-gradient(left, darken($color, 20%) 0%, $color 100%)
  background: linear-gradient(to right, darken($color, 20%) 0%, $color 100%)

@mixin blur($radius)
	-webkit-filter: blur($radius+px)
	-ms-filter: blur($radius+px)
	filter: url("data:image/svg+xml;utf8,<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><filter id=\"blur\"><feGaussianBlur stdDeviation=\"#{$radius}\" /></filter></svg>#blur"); /* Firefox, Safari, Chrome*/
	filter: progid:DXImageTransform.Microsoft.Blur(Strength=$radius)

@function strip-unit($number) 
  @if type-of($number) == 'number' and not unitless($number)
    @return $number / ($number * 0 + 1);

  @return $number